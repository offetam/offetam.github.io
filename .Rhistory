cd
cd
ls
1 + 1
1 + 1
?peek
??peek
install.packages(tidyverse)
install.packages("tidyverse")
install.packages(c('readr', 'ggplot2', 'tidyr'))
install.packages(c('readr', 'ggplot2'))
?peek
??peek
library(gg)
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.xlsx")
peek(avg_us_tuition)
?read.csv
library(ggplot2)
library(readr)
library(tidyverse)
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.xlsx")
peek(avg_us_tuition)
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.xlsx")
#peek(avg_us_tuition)
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.xlsx")
view(avg_us_tuition)
#peek(avg_us_tuition)
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.xlsx")
view(avg_us_tuition)
#peek(avg_us_tuition)
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.xlsx")
#view(avg_us_tuition)
#peek(avg_us_tuition)
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv(datasets/us_avg_tuition.xlsx)
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("us_avg_tuition.xlsx")
#view(avg_us_tuition)
#peek(avg_us_tuition)
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("us_avg_tuition.xlsx")
view(avg_us_tuition)
#peek(avg_us_tuition)
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("us_avg_tuition.xlsx")
avg_us_tuition
#peek(avg_us_tuition)
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("us_avg_tuition.csv")
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets\us_avg_tuition.csv")
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
avg_us_tuition
#peek(avg_us_tuition)
library(tidyverse)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#avg_us_tuition
peek(avg_us_tuition)
?peek
??peek
library(tidyverse)
library(tidyselect)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#avg_us_tuition
peek(avg_us_tuition)
library(tidyselect)
library(tidyverse)
library(tidyselect)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#avg_us_tuition
peek(avg_us_tuition)
?peek
library(tidyverse)
library(tidyselect)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#avg_us_tuition
peek(avg_us_tuition)
library(tidyverse)
library(tidyselect)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#avg_us_tuition
peek(avg_us_tuition)
library(tidyverse)
library(tidyselect)
library(readr)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#avg_us_tuition
head(avg_us_tuition)
?read.csv
status()
renv::snapshot()
renv::status()
renv::status()
?renv::status()
renv::snapshot()
renv::status()
version
install.packages("gganimate")
library(gganimate)
library(gganimate)
gif_plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
labs(title = "US Tuitions by State from 2004-2015") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
gif_plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
labs(title = "US Tuitions by State from 2004-2015") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
gif_plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
labs(title = "US Tuitions by State from 2004-2015") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
library(tidyverse)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#reamed column from "State" to "state" as usmaps won't recognize the column otherwise.
avg_us_tuition <- avg_us_tuition |>
rename(state = "State")
#handy way to build table using knitr::kable
knitr::kable(
avg_us_tuition[1:10, 1:5]
)
#| warning: false
library(tidyverse)
library(ggplot2)
library(janitor)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#renamed column from "State" to "state" as usmaps won't recognize the column otherwise.
avg_us_tuition <- avg_us_tuition |>
rename(state = "State")
head(avg_us_tuition)
#pivot dataframe (Year is a value and not a variable)
pivot_avg_us_tuition <- avg_us_tuition |>
pivot_longer(
cols = !state,
names_to = "year",
values_to = "avg_tuition_cost"
)
#removing comma (not sure if necessary)
pivot_avg_us_tuition$avg_tuition_cost <- str_replace_all(pivot_avg_us_tuition$avg_tuition_cost, ",", "")
#regex to mutate the values of the year to be more readable (instead of X2004-05 rename it to 2004).
#and then make sure to save the result
pivot_avg_us_tuition <- pivot_avg_us_tuition |>
mutate(
year = str_extract(year, "\\d\\d\\d\\d"),
avg_tuition_cost = str_extract(avg_tuition_cost, "(?<=\\$).*") #?<= is a look behind regex function (in this case is "$")
)
head(pivot_avg_us_tuition)
pivot_avg_us_tuition[3] <- lapply(pivot_avg_us_tuition[3], as.numeric)
#grab the entries starting from year 2004 (to 2005)
us_tuition_2004 <- pivot_avg_us_tuition |>
filter(year == "2004")
head(us_tuition_2004)
library(gganimate)
gif_plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
labs(title = "US Tuitions by State from 2004-2015") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
library(gganimate)
gif_plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
labs(title = "US Tuitions by State from 2004-2015") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
View(gif_plot)
library(tidyverse)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#reamed column from "State" to "state" as usmaps won't recognize the column otherwise.
avg_us_tuition <- avg_us_tuition |>
rename(state = "State")
#handy way to build table using knitr::kable
knitr::kable(
avg_us_tuition[1:10, 1:5]
)
#| warning: false
library(tidyverse)
library(ggplot2)
library(janitor)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#renamed column from "State" to "state" as usmaps won't recognize the column otherwise.
avg_us_tuition <- avg_us_tuition |>
rename(state = "State")
head(avg_us_tuition)
#pivot dataframe (Year is a value and not a variable)
pivot_avg_us_tuition <- avg_us_tuition |>
pivot_longer(
cols = !state,
names_to = "year",
values_to = "avg_tuition_cost"
)
#removing comma (not sure if necessary)
pivot_avg_us_tuition$avg_tuition_cost <- str_replace_all(pivot_avg_us_tuition$avg_tuition_cost, ",", "")
#regex to mutate the values of the year to be more readable (instead of X2004-05 rename it to 2004).
#and then make sure to save the result
pivot_avg_us_tuition <- pivot_avg_us_tuition |>
mutate(
year = str_extract(year, "\\d\\d\\d\\d"),
avg_tuition_cost = str_extract(avg_tuition_cost, "(?<=\\$).*") #?<= is a look behind regex function (in this case is "$")
)
head(pivot_avg_us_tuition)
pivot_avg_us_tuition[3] <- lapply(pivot_avg_us_tuition[3], as.numeric)
#grab the entries starting from year 2004 (to 2005)
us_tuition_2004 <- pivot_avg_us_tuition |>
filter(year == "2004")
head(us_tuition_2004)
library(gganimate)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
labs(title = "US Tuitions by State from 2004-2015") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
library(gganimate)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
transition <- plot +
labs(title = "US Tuitions by State each year {as.integer(frame_time)}") +
transition_time(year)
library(gganimate)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
transition <- plot +
labs(title = "US Tuitions by State each year {as.integer(frame_time)}") +
transition_time(year)
anim
library(gganimate)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
transition <- plot +
labs(title = "US Tuitions by State each year {as.integer(frame_time)}") +
transition_time(year)
animate(transition)
#| warning: false
library(tidyverse)
library(ggplot2)
library(janitor)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#renamed column from "State" to "state" as usmaps won't recognize the column otherwise.
avg_us_tuition <- avg_us_tuition |>
rename(state = "State")
head(avg_us_tuition)
#pivot dataframe (Year is a value and not a variable)
pivot_avg_us_tuition <- avg_us_tuition |>
pivot_longer(
cols = !state,
names_to = "year",
values_to = "avg_tuition_cost"
)
#removing comma (not sure if necessary)
pivot_avg_us_tuition$avg_tuition_cost <- str_replace_all(pivot_avg_us_tuition$avg_tuition_cost, ",", "")
#regex to mutate the values of the year to be more readable (instead of X2004-05 rename it to 2004).
#and then make sure to save the result
pivot_avg_us_tuition <- pivot_avg_us_tuition |>
mutate(
year = str_extract(year, "\\d\\d\\d\\d"),
avg_tuition_cost = str_extract(avg_tuition_cost, "(?<=\\$).*") #?<= is a look behind regex function (in this case is "$")
)
head(pivot_avg_us_tuition)
pivot_avg_us_tuition[3] <- lapply(pivot_avg_us_tuition[3], as.numeric)
pivot_avg_us_tuition[2] <- lapply(pivot_avg_us_tuition[2], as.numeric)
#grab the entries starting from year 2004 (to 2005)
us_tuition_2004 <- pivot_avg_us_tuition |>
filter(year == "2004")
head(us_tuition_2004)
library(tidyverse)
library(ggplot2)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#reamed column from "State" to "state" as usmaps won't recognize the column otherwise.
avg_us_tuition <- avg_us_tuition |>
rename(state = "State")
#handy way to build table using knitr::kable
knitr::kable(
avg_us_tuition[1:10, 1:5]
)
#| warning: false
library(tidyverse)
library(ggplot2)
library(janitor)
avg_us_tuition <- read.csv("datasets/us_avg_tuition.csv")
#renamed column from "State" to "state" as usmaps won't recognize the column otherwise.
avg_us_tuition <- avg_us_tuition |>
rename(state = "State")
head(avg_us_tuition)
#pivot dataframe (Year is a value and not a variable)
pivot_avg_us_tuition <- avg_us_tuition |>
pivot_longer(
cols = !state,
names_to = "year",
values_to = "avg_tuition_cost"
)
#removing comma (not sure if necessary)
pivot_avg_us_tuition$avg_tuition_cost <- str_replace_all(pivot_avg_us_tuition$avg_tuition_cost, ",", "")
#regex to mutate the values of the year to be more readable (instead of X2004-05 rename it to 2004).
#and then make sure to save the result
pivot_avg_us_tuition <- pivot_avg_us_tuition |>
mutate(
year = str_extract(year, "\\d\\d\\d\\d"),
avg_tuition_cost = str_extract(avg_tuition_cost, "(?<=\\$).*") #?<= is a look behind regex function (in this case is "$")
)
head(pivot_avg_us_tuition)
pivot_avg_us_tuition[3] <- lapply(pivot_avg_us_tuition[3], as.numeric)
pivot_avg_us_tuition[2] <- lapply(pivot_avg_us_tuition[2], as.numeric)
#grab the entries starting from year 2004 (to 2005)
us_tuition_2004 <- pivot_avg_us_tuition |>
filter(year == "2004")
head(us_tuition_2004)
library(gganimate)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
transition <- plot +
labs(title = "US Tuitions by State each year {as.integer(frame_time)}") +
transition_time(year)
animate(transition)
library(gganimate)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
transition <- plot +
labs(title = "US Tuitions by State each year {as.integer(frame_time)}") +
transition_time(year)
gif <- animate(transition, fps=10)
gif
library(gganimate)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
transition <- plot +
labs(title = "US Tuitions by State each year {as.integer(frame_time)}") +
transition_time(year)
gif <- animate(transition, fps=10)
anim_save("map_avg_tuition", gif)
library(gganimate)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
transition <- plot +
labs(title = "US Tuitions by State each year {as.integer(frame_time)}") +
transition_time(year)
gif <- animate(transition, fps=10)
anim_save("map_avg_tuition.gif", gif)
?anim_save
library(gganimate)
library(ggplot2)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
transition <- plot +
labs(title = "US Tuitions by State each year {as.integer(frame_time)}") +
transition_time(year)
gif <- animate(transition, fps=10)
gif
anim_save("map_avg_tuition.gif", gif)
library(gganimate)
library(ggplot2)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
transition <- plot +
labs(title = "US Tuitions by State each year {as.integer(frame_time)}") +
transition_time(year)
gif <- animate(transition, fps=10)
gif
anim_save(filename = "map_avg_tuition.gif", gif)
library(gganimate)
library(ggplot2)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
scale_color_continuous(type = "gradient", label = scales::comma) +
theme(legend.position = "right")
transition <- plot +
labs(title = "US Tuitions by State each year {as.integer(frame_time)}") +
transition_time(year)
gif <- animate(transition, fps=10, renderer = gifski_renderer())
gif
anim_save(filename = "map_avg_tuition.gif")
library(gganimate)
library(ggplot2)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
scale_fill_viridis_c(name = "Avg. US Tuition", label = scales::comma) +
theme(legend.position = "right")
transition <- plot +
labs(title = "US Tuitions by State each year {as.integer(frame_time)}") +
transition_time(year)
gif <- animate(transition, fps=6, renderer = gifski_renderer())
gif
anim_save(filename = "map_avg_tuition.gif")
library(gganimate)
library(ggplot2)
#Almost the same as previous, except we will be transitioning the label (to show that the years are changing)
plot <- usmap::plot_usmap(data = pivot_avg_us_tuition, values = "avg_tuition_cost") +
scale_fill_viridis_c(name = "Avg. US Tuition", label = scales::comma) +
theme(legend.position = "right")
#modify labels to transition (based on the year)
transition <- plot +
labs(title = "US Tuitions by State each year {as.integer(frame_time)}") +
transition_time(year)
#then we animate the plot
gif <- animate(transition, fps=8, renderer = gifski_renderer())
#viewing the gif
gif
#saving the file as a .gif
anim_save(filename = "map_avg_tuition.gif")
