[
  {
    "objectID": "posts/TidyTuesday/2018-04-02.html",
    "href": "posts/TidyTuesday/2018-04-02.html",
    "title": "Tidy Tuesday - US Avg. Tuition (2018-04-02)",
    "section": "",
    "text": "Note\n\n\n\nNote that the date following the post title is from when the dataset was added to Tidy Tuesday.\nYou can find the dataset I used here (2018-04-02)."
  },
  {
    "objectID": "posts/TidyTuesday/2018-04-02.html#visualization-1",
    "href": "posts/TidyTuesday/2018-04-02.html#visualization-1",
    "title": "Tidy Tuesday - US Avg. Tuition (2018-04-02)",
    "section": "Visualization 1",
    "text": "Visualization 1\nBelow, I imported the data below and created my first visualization:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\n\navg_us_tuition &lt;- read.csv(\"datasets/us_avg_tuition.csv\")\n\n#reamed column from \"State\" to \"state\" as usmaps won't recognize the column otherwise.\navg_us_tuition &lt;- avg_us_tuition |&gt; \n  rename(state = \"State\")\n\n#handy way to build table using knitr::kable\nknitr::kable(\n  avg_us_tuition[1:10, 1:5]\n)\n\n\n\n\nstate\nX2004.05\nX2005.06\nX2006.07\nX2007.08\n\n\n\n\nAlabama\n$5,683\n$5,841\n$5,753\n$6,008\n\n\nAlaska\n$4,328\n$4,633\n$4,919\n$5,070\n\n\nArizona\n$5,138\n$5,416\n$5,481\n$5,682\n\n\nArkansas\n$5,772\n$6,082\n$6,232\n$6,415\n\n\nCalifornia\n$5,286\n$5,528\n$5,335\n$5,672\n\n\nColorado\n$4,704\n$5,407\n$5,596\n$6,227\n\n\nConnecticut\n$7,984\n$8,249\n$8,368\n$8,678\n\n\nDelaware\n$8,353\n$8,611\n$8,682\n$8,946\n\n\nFlorida\n$3,848\n$3,924\n$3,888\n$3,879\n\n\nGeorgia\n$4,298\n$4,492\n$4,584\n$4,790\n\n\n\n\n\n(table columns extend to 2014-2015)\n\nusmap::plot_usmap(data = avg_us_tuition, values = \"X2004.05\") + \n  labs(title = \"US Tuitions by State in 2004-2005\", subtitle = \"This data is from the tidy tuesday dataset which consists of multiple years (2004 all the way to 2015.\") + \n  scale_color_continuous(type = \"gradient\")\n\n\n\n\nImage of visualization due to github errors with packages\n\n\n\nReflection for today’s visualizations\nSome takeaways after learning to plot a US Map graph:\n\nThe package usmap, is very handy for visualizations referencing states and comes with ggplot2 functionality (allowing you to use ggplot functions).\nThe package requires a “state” column (case sensitive) in order to recognize a dataframe and build off of it.\nCurrently the visualization isn’t great because each state has its own specific key. This makes the colors all over the place.\n\n\n\n\n\n\n\nDiscrete vs Continuous\n\n\n\nR is treating the avg US tuition as a discrete variable and I don’t want that! I’ll need to make it continous."
  },
  {
    "objectID": "posts/TidyTuesday/2018-04-02.html#visualizations-2-3-plus-next-steps",
    "href": "posts/TidyTuesday/2018-04-02.html#visualizations-2-3-plus-next-steps",
    "title": "Tidy Tuesday - US Avg. Tuition (2018-04-02)",
    "section": "Visualizations 2 & 3, Plus next steps",
    "text": "Visualizations 2 & 3, Plus next steps\nNext, I should set a proper color scale for the various tuition costs to make the graph a lot cleaner. As you can see, it doesn’t actually graph the average US tuition on a scale, so I will need to modify the values slightly to do this.\nThat means I will\n1. Need to pivot some values around (I want the year as values not variable)\n2. Need to apply continuous data for the avg. tuition so that I can use the scale.\nI also decided to reformat the years just to have the specific start year (rathar than 2004-2005 the new format would be 2004). Below you can find the r code doing that.\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(janitor)\n\n\navg_us_tuition &lt;- read.csv(\"datasets/us_avg_tuition.csv\")\n\n#renamed column from \"State\" to \"state\" as usmaps won't recognize the column otherwise.\navg_us_tuition &lt;- avg_us_tuition |&gt; \n  rename(state = \"State\")\nhead(avg_us_tuition)\n\n       state X2004.05 X2005.06 X2006.07 X2007.08 X2008.09 X2009.10 X2010.11\n1    Alabama   $5,683   $5,841   $5,753   $6,008   $6,475   $7,189   $8,071\n2     Alaska   $4,328   $4,633   $4,919   $5,070   $5,075   $5,455   $5,759\n3    Arizona   $5,138   $5,416   $5,481   $5,682   $6,058   $7,263   $8,840\n4   Arkansas   $5,772   $6,082   $6,232   $6,415   $6,417   $6,627   $6,901\n5 California   $5,286   $5,528   $5,335   $5,672   $5,898   $7,259   $8,194\n6   Colorado   $4,704   $5,407   $5,596   $6,227   $6,284   $6,948   $7,748\n  X2011.12 X2012.13 X2013.14 X2014.15 X2015.16\n1   $8,452   $9,098   $9,359   $9,496   $9,751\n2   $5,762   $6,026   $6,012   $6,149   $6,571\n3   $9,967  $10,134  $10,296  $10,414  $10,646\n4   $7,029   $7,287   $7,408   $7,606   $7,867\n5   $9,436   $9,361   $9,274   $9,187   $9,270\n6   $8,316   $8,793   $9,293   $9,299   $9,748\n\n#pivot dataframe (Year is a value and not a variable)\npivot_avg_us_tuition &lt;- avg_us_tuition |&gt; \n  pivot_longer(\n    cols = !state,\n    names_to = \"year\",\n    values_to = \"avg_tuition_cost\"\n  )\n\n#removing comma (not sure if necessary)\npivot_avg_us_tuition$avg_tuition_cost &lt;- str_replace_all(pivot_avg_us_tuition$avg_tuition_cost, \",\", \"\")\n \n#regex to mutate the values of the year to be more readable (instead of X2004-05 rename it to 2004).\n#and then make sure to save the result\npivot_avg_us_tuition &lt;- pivot_avg_us_tuition |&gt; \n  mutate(\n    year = str_extract(year, \"\\\\d\\\\d\\\\d\\\\d\"),\n    avg_tuition_cost = str_extract(avg_tuition_cost, \"(?&lt;=\\\\$).*\") #?&lt;= is a look behind regex function (in this case is \"$\")\n  )\nhead(pivot_avg_us_tuition)\n\n# A tibble: 6 × 3\n  state   year  avg_tuition_cost\n  &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;           \n1 Alabama 2004  5683            \n2 Alabama 2005  5841            \n3 Alabama 2006  5753            \n4 Alabama 2007  6008            \n5 Alabama 2008  6475            \n6 Alabama 2009  7189            \n\npivot_avg_us_tuition[3] &lt;- lapply(pivot_avg_us_tuition[3], as.numeric)\npivot_avg_us_tuition[2] &lt;- lapply(pivot_avg_us_tuition[2], as.numeric)\n\n#grab the entries starting from year 2004 (to 2005)\nus_tuition_2004 &lt;- pivot_avg_us_tuition |&gt; \n  filter(year == \"2004\") \n\nhead(us_tuition_2004)\n\n# A tibble: 6 × 3\n  state       year avg_tuition_cost\n  &lt;chr&gt;      &lt;dbl&gt;            &lt;dbl&gt;\n1 Alabama     2004             5683\n2 Alaska      2004             4328\n3 Arizona     2004             5138\n4 Arkansas    2004             5772\n5 California  2004             5286\n6 Colorado    2004             4704\n\n\nNow that the dataset looks tidied up, next I will try to plot the usmap again:\n\n#Making a visualization with usmap using a continuous scale:\n\nusmap::plot_usmap(data = us_tuition_2004, values = \"avg_tuition_cost\") +\n  labs(title = \"US Tuitions by State in 2004-2005\", subtitle = \"This data is from the tidy tuesday dataset which consists of multiple years (2004 all the way to 2015.\") + \n  scale_color_continuous(type = \"gradient\", label = scales::comma) + \n   theme(legend.position = \"right\")\n\n\n\n\nImage of visualization due to github errors with packages\n\n\nLooks great now! 😃\nI also learned about a colorblind friendly scale which I tried to apply in a similar visualization and I liked it a bit more than the simple gradient I have above.\n\n#Making a visualization with usmap with viridis (colorblind friendly) continuous scale:\n\n usmap::plot_usmap(data = us_tuition_2004, values = \"avg_tuition_cost\") + \n   labs(title = \"US Tuitions by State in 2004-2005\", subtitle = \"This data is from the tidy tuesday dataset which consists of multiple years\") + \n   scale_fill_viridis_c(name = \"Avg. US Tuition\", label = scales::comma) + \n   theme(legend.position = \"right\")\n\n\n\n\nImage of visualization due to github errors with packages\n\n\n\nReflection for today’s visualizations\nThese 2 visualizations were quite challenging to reach too. I think that’s due to some things I didn’t realize before working towards them.\n\nFor one, I didn’t think much about the avg tuition being a discrete variable which unsurprisingly would cause trouble with scale for the visualization. Once I realized that and properly adjust the variable to be continuous, that problem was fixed!\nThe other issue I had was from working on tidying up the data, after recently learning about pivoting. I recognize though the usefulness of pivoting as earlier I didn’t even think about how the years would actually be more appropriate as values in a cell rather than as a column as a variable.\nI also had to look up a lot of the functions for tidying up data. I’m currently taking some time to get understand the functions and arguments I used for the visualizations! 📘📘📘 (some of those functions include scale_fill_viridis_c for a more colorblind friendly scale, using scales::comma to add commas to the scale values and of course, the usmap package for visualizations with a map)"
  },
  {
    "objectID": "posts/TidyTuesday/2018-04-02.html#next-steps-2",
    "href": "posts/TidyTuesday/2018-04-02.html#next-steps-2",
    "title": "Tidy Tuesday - US Avg. Tuition (2018-04-02)",
    "section": "Next steps #2",
    "text": "Next steps #2\nWhat do I plan on doing for the last visualization?\nI saw another person, Jen Richmond create some awesome usmap visualizations as well! Especially interesting is the graph at the bottom of the post, which consists of a really awesome gif visualization capturing the yearly change of nurses hourly wages and I’d like to apply that to my current visualization too! So, up next I’ll be trying to learn how to do that from her post and take some time reflecting and detailing the process, and what I learned from doing it.\nSo far what I’ve learned about making an animated gif graph over time from Jen’s post is that the functionality is done easily through gganimate.\n\nlibrary(gganimate)\nlibrary(ggplot2)\nlibrary(ggeasy)\n\n\n#Almost the same as previous, except we will be transitioning the label (to show that the years are changing)\nplot &lt;- usmap::plot_usmap(data = pivot_avg_us_tuition, values = \"avg_tuition_cost\") +\n  scale_fill_viridis_c(name = \"Avg. US Tuition\", label = scales::comma) + \n   easy_move_legend(to = c(\"right\")) + #these following 2 lines from Jen's post is to stylize the graph a bit\n   theme(panel.background = element_rect(colour = \"black\"))\n   #note how the resulting visualization has a black border and the position of the legend is to the right.\n\n\n#modify labels to transition (based on the year)\ntransition &lt;- plot +\n  labs(title = \"US Tuitions by State each year {as.integer(frame_time)}\") +\n  transition_time(year)\n\n#then we animate the plot \ngif &lt;- animate(transition, fps=8, renderer = gifski_renderer())\n\n#viewing the gif\ngif\n\n#And then finally, saving the file as a .gif\nanim_save(filename = \"map_avg_tuition.gif\")\n\n\n\n\nThe resulting .gif"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "myblog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nTidy Tuesday - US Avg. Tuition (2018-04-02)\n\n\n\ntidytuesday\n\n\nanalysis\n\n\n\nDiscussing and making some visualizations on US Avg. Tuition\n\n\n\nEthan Tam\n\n\nAug 18, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nMy 1\n\n\n\nnews\n\n\n\nPost description here\n\n\n\nTesty Zesty\n\n\nMay 23, 2021\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome!",
    "section": "",
    "text": "Source: Miguel Á. Padriñán\n\n\nI will be using quarto as the website to share any data visualizations I make, typically through blog posts. You can find those posts on the header above or here.\nThe plan is to eventually use the main page for notes and exercises on the R4DS book."
  },
  {
    "objectID": "posts/TidyTuesday/date_here.html",
    "href": "posts/TidyTuesday/date_here.html",
    "title": "My 1",
    "section": "",
    "text": "Day 1."
  }
]